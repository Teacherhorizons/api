openapi: 3.1.0
info:
  version: 1.0.0
  title: Teacher Horizons API
  contact:
    email: dev@teacherhorizons.com
    url: "http://127.0.0.1:8080/"
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  x-logo:
    url: "https://www.teacherhorizons.com/assets/bird/logo.png"
  description:
    # TODO: figure out how to disable this warning (e.g. 'yamllint disable-line' doesn't work)
    $ref: "./info-description.md"
# externalDocs:
#   description: Find out how to create a GitHub repo for your OpenAPI definition.
#   url: 'https://github.com/Rebilly/generator-openapi-repo'
tags:
  # categories (alphabetical)
  - name: admin-notes
    description: Operations relating to admin-notes
  - name: applications
    description: Operations relating to applications
  - name: cities
    description: Operations relating to cities
  - name: community-responses
    description: Operations relating to community responses
  - name: countries
    description: Operations relating to countries
  - name: documents
    description: Operations relating to documents
  - name: email-templates
    description: Operations relating to email templates
  - name: employment-records
    description: Operations relating to teacher employment records
  - name: job-applications
    description: Operations relating to job applications
  - name: jobs
    description: Operations relating to jobs
  - name: lists
    description: Operations relating to simple lists of objects - such as subjects or roles
  - name: other
    description: Other Operations
  - name: references
    description: Operations relating to references
  - name: regions
    description: Operations relating to regions (~continents)
  - name: schools
    description: Operations relating to schools
  - name: teachers
    description: Operations relating to teachers or candidates
  - name: users
    description: Operations relating to users

  # statuses
  - name: status-current
    description: ...
  - name: status-proposed
    description: ...

  # non-th-examples
  - name: Example - Echo
    description: Example echo operations.
  - name: Example - User
    description: Operations about users.
  - name: Example - Tag
    description: This is a tag description.

  - name: simple-model-city
    x-displayName: Simple model - City
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SimpleModel_city" />

  - name: simple-model-country
    x-displayName: Simple model - Country
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SimpleModel_country" />

  - name: simple-model-lists
    x-displayName: Lists
    description: |
      ### AcademicSystem
      <SchemaDefinition schemaRef="#/components/schemas/AcademicSystem" />
      ### Accreditation
      <SchemaDefinition schemaRef="#/components/schemas/Accreditation" />
      ### ThDiscoveryMethod
      <SchemaDefinition schemaRef="#/components/schemas/ThDiscoveryMethod" />
      ### ThDiscoveryMethodCategory
      <SchemaDefinition schemaRef="#/components/schemas/ThDiscoveryMethodCategory" />

  - name: simple-model-pet
    x-displayName: Pet (Non-TH)
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Pet" />

  - name: simple-model-region
    x-displayName: Simple model - Region
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SimpleModel_region" />

  - name: simple-model-school
    x-displayName: School
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/School" />

  - name: simple-model-teacher
    x-displayName: Simple model - Teacher
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SimpleModel_teacher" />

  # JSON:API models
  - name: json-api-model-city
    x-displayName: JSON:API model - City
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/JsonApiModel_city" />
 
  - name: json-api-model-country
    x-displayName: JSON:API model - Country
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/JsonApiModel_country" />
 
  - name: json-api-model-region
    x-displayName: JSON:API model - Region
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/JsonApiModel_region" />

  - name: json-api-model-teacher
    x-displayName: JSON:API model - Teacher
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/JsonApiModel_teacher" />

x-tagGroups:
  - name: Simple models
    tags:
      - simple-model-accreditation-type
      - simple-model-city
      - simple-model-country
      - simple-model-lists
      - simple-model-pet
      - simple-model-region
      - simple-model-school
      - simple-model-teacher

  - name: JSON:API models
    tags:
      - json-api-model-region
      - json-api-model-teacher
      - json-api-model-city
      - json-api-model-country

  - name: API
    tags:
      - admin-notes
      - applications
      - cities
      - community-responses
      - countries
      - documents
      - email-templates
      - employment-records
      - job-applications
      - jobs
      - lists
      - other
      - references
      - regions
      - schools
      - sites
      - teachers
      - users

  - name: API - non-TH examples
    tags:
      - Example - Echo
      - Example - User
      - Example - Tag
servers:
  - url: "https://beta.teacherhorizons.com/th/api"
paths:
  # current
  # $ref should be of the form: "./paths/current/{category}/{path-words-in-kebab-form}.yaml"

  # admin-notes
  /v1/teacher/member-number/{memberNumber}/admin-notes:
    $ref: "./paths/current/admin-notes/teacher-member-number-admin-notes.yaml"

  # applications
  /application-events:
    $ref: "./paths/proposed/applications/application-events.yaml"

  /application:
    $ref: "./paths/proposed/applications/application.yaml"

  # cities
  /v3/city/id/{cityId}/profile:
    $ref: "./paths/current/cities/city-id-profile.yaml"

  # community-responses
  /v1/school-community/school-responses/school/id/{schoolId}:
    $ref: "./paths/current/community-responses/school-community-school-responses-school-id.yaml"

  # documents
  /v2/teacher/member-number/{memberNumber}/documents:
    $ref: "./paths/current/documents/teacher-member-number-documents.yaml"

  # email-templates
  /email-templates:
    $ref: "./paths/proposed/email-templates/email-templates.yaml"

  # employment records
  /v1/teacher/member-number/{memberNumber}/employment-records:
    $ref: "./paths/current/employment-records/teacher-member-number-employment-records.yaml"
  # TODO AS: organise and finish this one
  /v1/teacher/member-number/{member-number}/employment-record/add:
    $ref: "./paths/current/employment-records/member-number-employment-record-add.yaml"
  /v1/teacher/member-number/{memberNumber}/employment-record/id/16492/update:
    $ref: "./paths/current/employment-records/teacher-member-number-employment-record-id-update.yaml"

  # job applications
  /v1/jobs/applications/search:
    $ref: "./paths/current/job-applications/job-application-search.yaml"

  # jobs
  /v1/jobs/search/city-area/by-city/count:
    $ref: "./paths/current/jobs/job-search-city-area-by-city-count.yaml"
  /v1/jobs/search/school-area/full/count:
    $ref: "./paths/current/jobs/job-search-school-area-full-count.yaml"
  /v1/jobs/search/country-area/by-country/count:
    $ref: "./paths/current/jobs/job-search-country-area-by-country-count.yaml"
  /v1/jobs/search/school-area/full:
    $ref: "./paths/current/jobs/job-search-school-area-full.yaml"
  /v1/jobs/search/region-area/by-region/count:
    $ref: "./paths/current/jobs/job-search-region-area-by-region-count.yaml"

  # lists
  /v1/lists:
    $ref: "./paths/current/lists/lists.yaml"
  /v1/lists/keys:
    $ref: "./paths/current/lists/lists-keys.yaml"
  /v1/jobs/applications/lists:
    $ref: "./paths/current/lists/job-application-list.yaml"

  #references
  /v2/teacher/member-number/2123428/references:
    $ref: "./paths/current/references/teacher-member-number-references.yaml"

  # regions

  # schools
  /v1/school/id/{schoolId}/jobs:
    $ref: "./paths/current/jobs/school-id-jobs.yaml"
  /v1/schools/search/city-area/by-city/count:
    $ref: "./paths/current/schools/schools-search-city-area-by-city-count.yaml"
  /v3/schools/search/school-area/count:
    $ref: "./paths/current/schools/schools-search-school-area-count.yaml"
  /v1/schools/search/country-area/by-country/count:
    $ref: "./paths/current/schools/schools-search-country-area-by-country-count.yaml"
  /v1/schools/search/region-area/by-region/count:
    $ref: "./paths/current/schools/schools-search-region-area-by-region-count.yaml"
  /v3/school/slug/{schoolSlug}/profile:
    $ref: "./paths/current/schools/school-slug-profile.yaml"
  /v3/schools/search/school-area/full:
    $ref: "./paths/current/schools/schools-search-school-area-full.yaml"

  # teachers
  /v2/candidates/search/country-area/full:
    $ref: "./paths/current/teachers/candidates-search-country-area-full.yaml"
  /v1/candidates/search/full/count:
    $ref: "./paths/current/teachers/candidates-search-full-count.yaml"
  /v2/candidates/search/country-area/by-country/count:
    $ref: "./paths/current/teachers/candidates-search-country-area-by-country-count.yaml"
  /v2/candidates/search/region-area/by-region/count:
    $ref: "./paths/current/teachers/candidates-search-region-area-by-region-count.yaml"
  /v3/teacher/member-number/{memberNumber}/core:
    $ref: "./paths/current/teachers/teacher-member-number-core.yaml"
  /v2/teacher/member-number/{member-number}/related:
    $ref: "./paths/current/teachers/teacher-member-number-related.yaml"
  /v1/candidates:
    $ref: "./paths/current/teachers/candidate-details.yaml"
  /v1/candidates/search/full:
    $ref: "./paths/current/teachers/candidates-search-full.yaml"
  /v2/candidates/search/country-area/full/count:
    $ref: "./paths/current/teachers/candidates-search-country-area-full-count.yaml"

  # users
  /v1/user/bundle:
    $ref: "./paths/current/user/user-bundle.yaml"
  /v1/admin-users:
    $ref: "./paths/current/user/admin-users.yaml"

  # other
  /v1/site/statistics:
    $ref: "./paths/current/other/site-statistics.yaml"

  # proposed

  # regions
  /regions/{regionId}:
    $ref: "./paths/proposed/regions/region.yaml"
  /regions:
    $ref: "./paths/proposed/regions/regions.yaml"
  /schools-agg-regions:
    $ref: "./paths/proposed/regions/schools-agg-regions.yaml"

  /countries/{countryId}:
    $ref: "./paths/proposed/countries/country.yaml"

  /job-applications:
    $ref: "./paths/proposed/job-applications/job-applications.yaml"
  /schools:
    $ref: "./paths/proposed/schools/schools.yaml"
  # /schools/{schoolId}:
  #   $ref: "./paths/proposed/schools/school.yaml"
  /teachers:
    $ref: "./paths/proposed/teachers/teachers.yaml"

  # non-th-examples
  "/users/{username}":
    $ref: "./paths/non-th-examples/users@{username}.yaml"
  /echo:
    $ref: "./paths/non-th-examples/echo.yaml"
  /pathItem:
    $ref: "./paths/non-th-examples/path-item.yaml"
  /pathItemWithExamples:
    $ref: "./paths/non-th-examples/path-item-with-examples.yaml"

components:
  securitySchemes:
    main_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: "http://example.com/api/oauth/dialog"
          scopes:
            "read:users": read users info
            "write:users": modify or remove users
    api_key:
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic
  schemas:
    $ref: "./components/schemas/proposed/schemas.yaml"
