openapi: 3.1.0
info:
  version: 1.0.0
  title: Teacher Horizons API
  # termsOfService: 'https://example.com/terms/'
  contact:
    email: dev@teacherhorizons.com
    # url: 'http://example.com/contact'
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  x-logo:
    url: "https://www.teacherhorizons.com/assets/bird/logo.png"
  description:
    $ref: "./info-description.md"
# externalDocs:
#   description: Find out how to create a GitHub repo for your OpenAPI definition.
#   url: 'https://github.com/Rebilly/generator-openapi-repo'
tags:
  # categories (alphabetical)
  - name: cities
    description: Operations relating to cities
  - name: countries
    description: Operations relating to countries
  - name: job applications
    description: Operations relating to job applications
  - name: jobs
    description: Operations relating to jobs
  - name: lists
    description: Operations relating to simple lists of objects - such as subjects or roles
  - name: regions
    description: Operations relating to regions (~continents)
  - name: schools
    description: Operations relating to schools
  - name: sites
    description: Operations relating to sites
  - name: teachers
    description: Operations relating to teachers or candidates
  - name: users
    description: Operations relating to users

  # statuses
  - name: status-current
    description: ...
  - name: status-proposed
    description: ...

  # non-th-examples
  - name: Example - Echo
    description: Example echo operations.
  - name: Example - User
    description: Operations about users.
  - name: Example - Tag
    description: This is a tag description.
servers:
  - url: "https://beta.teacherhorizons.com/th/api"
paths:
  # current
  # $ref is of form: "./paths/current/{category}/{path-words-in-kebab-form}.yaml"
  /v3/city/id/{cityId}/profile:
    $ref: "./paths/current/cities/city-id-profile.yaml"

  /v1/lists:
    $ref: "./paths/current/lists/lists.yaml"
  /v1/lists/keys:
    $ref: "./paths/current/lists/lists-keys.yaml"

  /v3/school/slug/{schoolSlug}/profile:
    $ref: "./paths/current/schools/school-slug-profile.yaml"
  /v3/schools/search/school-area/full:
    $ref: "./paths/current/schools/schools-search-school-area-full.yaml"
  /v3/schools/search/school-area/count:
    $ref: "./paths/current/schools/schools-search-school-area-count.yaml"

  /v1/schools/search/region-area/by-region/count:
    $ref: "./paths/current/schools/schools-search-region-area-by-region-count.yaml"
  /v1/schools/search/country-area/by-country/count:
    $ref: "./paths/current/schools/schools-search-country-area-by-country-count.yaml"
  /v1/schools/search/city-area/by-city/count:
    $ref: "./paths/current/schools/schools-search-city-area-by-city-count.yaml"

  /api/v1/candidates/search/full:
    $ref: "./paths/current/teachers/candidates-search-full.yaml"
  /api/v1/candidates/search/full/count:
    $ref: "./paths/current/teachers/candidates-search-full-count.yaml"
#/api/v2/candidates/search/region-area/by-region/count
#/api/v2/candidates/search/country-area/by-country/count

  /v1/user/bundle:
    $ref: "./paths/current/user/user-bundle.yaml"
  /v1/site/statistics:
    $ref: "./paths/current/sites/site-statistics.yaml"
  /v1/jobs/search/region-area/by-region/count:
    $ref: "./paths/current/jobs/region-area-by-region-count.yaml"
  /v1/jobs/search/school-area/full:
    $ref: "./paths/current/jobs/schools-search-school-area-full.yaml"
  /v1/jobs/search/school-area/full/count:
    $ref: "./paths/current/jobs/schools-search-school-area-full-count.yaml"
  /v1/jobs/search/country-area/by-country/count:
    $ref: "./paths/current/jobs/schools-search-country-area-by-country-count.yaml"
  /v1/jobs/search/city-area/by-city/count:
    $ref: "./paths/current/jobs/schools-search-city-area-by-city-count.yaml"


  # proposed
  # TODO: consider versioning and 'sets'
  /job-applications:
    $ref: "./paths/proposed/job-applications/job-applications.yaml"
  /schools:
    $ref: "./paths/proposed/schools/schools.yaml"
  # /schools/{schoolId}:
  #   $ref: "./paths/proposed/schools/school.yaml"
  /teachers:
    $ref: "./paths/proposed/teachers/teachers.yaml"

  # non-th-examples
  "/users/{username}":
    $ref: "./paths/non-th-examples/users@{username}.yaml"
  /echo:
    $ref: "./paths/non-th-examples/echo.yaml"
  /pathItem:
    $ref: "./paths/non-th-examples/path-item.yaml"
  /pathItemWithExamples:
    $ref: "./paths/non-th-examples/path-item-with-examples.yaml"

# TODO: components section
components:
  securitySchemes:
    main_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: "http://example.com/api/oauth/dialog"
          scopes:
            "read:users": read users info
            "write:users": modify or remove users
    api_key:
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic
