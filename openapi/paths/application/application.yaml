# yaml-language-server: $schema=../../../meta/schemas/Path-Singular.json

get:
  operationId: get-application
  tags:
    - application
  summary: Get an application
  parameters:
    - in: path
      name: applicationId
      required: true
      example: 1
      schema:
        type: integer
    - in: query
      name: schema
      required: true
      schema:
        type: string
        enum:
          - admin
          - school
          - teacher
    # - in: query
    #   name: fields
    #   style: deepObject
    #   allowReserved: true
    #   explode: true
    #   schema:
    #     type: object
    #     additionalProperties:
    #       $ref: "../../../components/models/library/application/application.yaml#/application_metaProperties_shared"
    #       # $ref: "../../../components/schemas/proposed/simple-models/Application.yaml#/ApplicationProperties_all"
    #     example:
    #       application: name,slug,locationLatLong
  responses:
    "200":
      description: OK (Request successful)
      content:
        application/json:
          schema:
            $ref: "../../components/responses/application/application.yaml#/Response_application"
    "400":
      $ref: "../../components/models/json-api/error/Error.yaml#/JsonApiModel_error_400"
    "401":
      $ref: "../../components/models/json-api/error/Error.yaml#/JsonApiModel_error_401"
    "403":
      $ref: "../../components/models/json-api/error/Error.yaml#/JsonApiModel_error_403"
    "404":
      $ref: "../../components/models/json-api/error/Error.yaml#/JsonApiModel_error_404"
    "413":
      $ref: "../../components/models/json-api/error/Error.yaml#/JsonApiModel_error_413"
    "422":
      $ref: "../../components/models/json-api/error/Error.yaml#/JsonApiModel_error_422"

patch:
  operationId: patchApplication
  tags:
    - application
  summary: Update application
  description: ""
  parameters:
    - in: path
      name: applicationId
      required: true
      example: 1
      schema:
        type: integer
        format: int32
  requestBody:
    content:
      application/json:
        schema:
          type: object
          properties:
            type:
              type: string
              example: application
            attributes:
              type: object
              additionalProperties: false
              properties:
                creationDate:
                  type: string
                  format: date-time
                  example: 2011-02-07T15:53:34Z
                latestUpdateDate:
                  type: string
                  format: date-time
                  example: 2011-02-07T15:53:34Z
  responses:
    "204":
      description: NO_CONTENT (Request successful)
      content:
        application/json:
          schema:
            type: object
            default: null
    "400":
      $ref: "../../components/models/json-api/error/Error.yaml#/JsonApiModel_error_400"
    "401":
      $ref: "../../components/models/json-api/error/Error.yaml#/JsonApiModel_error_401"
    "403":
      $ref: "../../components/models/json-api/error/Error.yaml#/JsonApiModel_error_403"
    "404":
      $ref: "../../components/models/json-api/error/Error.yaml#/JsonApiModel_error_404"
    "413":
      $ref: "../../components/models/json-api/error/Error.yaml#/JsonApiModel_error_413"
    "422":
      $ref: "../../components/models/json-api/error/Error.yaml#/JsonApiModel_error_422"
