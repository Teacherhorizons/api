get:
  operationId: get-applications
  summary: Get list of 20 applications
  tags:
    - application
    - testing-status-1
  description: |
    <span class="testing-status-1"></span>
    - Admin: Can see all applications and all related events
    - Teacher: Can see only applications which relate to them, and all related events
    - School: Can see only applications which have been submitted to them, and only events from that point onwards
  parameters:
    - in: query
      name: schema
      required: true
      schema:
        type: string
        enum:
          - admin
          - school
          - teacher
    - $ref: "../../components/models/json-api/standard/parameters.yaml#/JsonApiModel_parameters_asUserId"
    - in: query
      name: filter
      style: deepObject
      allowReserved: true
      explode: true
      schema:
        type: object
        additionalProperties: false
        properties:
          filter[id][contains]:
            type: string
          filter[status.id][contains]:
            type: string
          filter[job.school.name][matches]:
            type: string
          filter[job.id][contains]:
            type: string
          filter[job.title][matches]:
            type: string
          filter[teacher.memberNumber][contains]:
            type: string
          filter[teacher.fullName][matches]:
            type: string
          filter[job.adviser.id][contains]:
            type: string
          filter[job.school.lra.id][contains]:
            type: string
          filter[job.subject.id][contains]:
            type: string
          filter[latestEvent.type.id][contains]:
            type: string
          filter[latestEvent.date][lte]:
            type: string
            format: date-time
          filter[event.type.id][contains]:
            type: string
          filter[minEvent.date][gte]:
            type: string
            format: date-time
          filter[maxEvent.date][lte]:
            type: string
            format: date-time
          filter[job.school.city.country.region.id][contains]:
            type: string
          filter[job.school.city.country.id][contains]:
            type: string
          filter[job.school.city.id][contains]:
            type: string
        example:
          id][contains: 1,2
          status.id][contains: 1,2
          job.school.name][matches: alic
          job.id][contains: 1,2
          job.title][matches: math
          teacher.memberNumber][contains: 1,2
          teacher.fullName][matches: smi
          job.adviser.id][contains: 1,2
          job.school.lra.id][contains: 1,2
          job.subject.id][contains]: 1,2
          latestEvent.type.id][contains: 1,2
          latestEvent.date][lte: 2022-08-11T00:00:00Z
          event.type.id][contains: 1,2
          minEvent.date][gte: 2022-08-11T00:00:00Z
          maxEvent.date][lte: 2022-08-11T00:00:00Z
          job.school.city.country.region.id][contains: 1,2
          job.school.city.country.id][contains: 1,2
          job.school.city.id][contains: 1,2
    - in: query
      name: page
      style: deepObject
      allowReserved: true
      explode: true
      schema:
        type: object
        additionalProperties: false
        properties:
          page[number]:
            type: number
          page[size]:
            type: number
        example:
          number: 1
          size: 1
    - in: query
      name: sort
      example: -creationDate
      schema:
        type: string
  responses:
    "200":
      description: OK (Request successful)
      content:
        application/json:
          schema:
            $ref: "../../components/responses/application/applications.yaml#/Response_applications"
    "400":
      $ref: "../../components/models/json-api/standard/error.yaml#/JsonApiModel_error_400"
    "401":
      $ref: "../../components/models/json-api/standard/error.yaml#/JsonApiModel_error_401"
    "403":
      $ref: "../../components/models/json-api/standard/error.yaml#/JsonApiModel_error_403"
    "404":
      $ref: "../../components/models/json-api/standard/error.yaml#/JsonApiModel_error_404"
    "413":
      $ref: "../../components/models/json-api/standard/error.yaml#/JsonApiModel_error_413"
    "422":
      $ref: "../../components/models/json-api/standard/error.yaml#/JsonApiModel_error_422"

post:
  operationId: post-application
  summary: Create application
  tags:
    - application
    - testing-status-1
  description: |
    <span class="testing-status-1"></span>
  requestBody:
    content:
      application/json:
        schema:
          type: object
          properties:
            data:
              type: object
              properties:
                type:
                  type: string
                  example: application
                attributes:
                  allOf:
                    - type: object
                      properties:
                        job:
                          $ref: "../../components/models/json-api/job/job.yaml#/JsonApiModel_job_relationship_attribute"
                        memberNumber:
                          $ref: "../../components/models/library/teacher/teacher.yaml#/teacher_memberNumber"
                    - required:
                        - job
                        - memberNumber
            # - $ref: "../../components/models/json-api/standard/parameters.yaml#/JsonApiModel_parameters_asUserId"
  responses:
    "201":
      description: CREATED (Request successful)
      content:
        application/json:
          schema:
            $ref: "../../components/models/json-api/application/application.yaml#/JsonApiModel_application_relationship"
    "400":
      $ref: "../../components/models/json-api/standard/error.yaml#/JsonApiModel_error_400"
    "401":
      $ref: "../../components/models/json-api/standard/error.yaml#/JsonApiModel_error_401"
    "403":
      $ref: "../../components/models/json-api/standard/error.yaml#/JsonApiModel_error_403"
    "404":
      $ref: "../../components/models/json-api/standard/error.yaml#/JsonApiModel_error_404"
    "413":
      $ref: "../../components/models/json-api/standard/error.yaml#/JsonApiModel_error_413"
    "422":
      $ref: "../../components/models/json-api/standard/error.yaml#/JsonApiModel_error_422"
