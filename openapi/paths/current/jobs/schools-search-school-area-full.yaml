get:
  operationId: getJobs_current
  tags:
    - jobs
    - status-current
  summary: Get a job (current)
  parameters:
    - in: query
      name: subjects
      description: Comma separated list of subject ids
      example: 2,4
      schema:
        type: string

    - in: query
      name: jobTitleSearchString
      description: Comma separated list of jobTitleSearchString ids
      example: 5
      schema:
        type: string

    - in: query
      name: roles
      description: Comma separated list of role ids
      example: 23,16
      schema:
        type: string

    - in: query
      name: locations
      description: Comma separated list of location ids
      example: 3,4
      schema:
        type: string

    - in: query
      name: regions
      description: Comma separated list of region ids
      example: 2,3
      schema:
        type: string

    - in: query
      name: countries
      description: Comma separated list of country ids
      example: 2,3
      schema:
        type: string

    - in: query
      name: cities
      description: Comma separated list of city ids
      example: 210
      schema:
        type: string

    - in: query
      name: academicSystems
      description: Comma separated list of academicSystems ids
      example: 3,4
      schema:
        type: string

    - in: query
      name: limit
      description: Number of records to return
      example: 20
      schema:
        type: integer
        format: int64

    - in: query
      name: page-number
      description: Page number to return
      example: 3
      schema:
        type: integer
        format: int64

    - in: query
      name: Date
      description: Job Start Date
      example: yyyy-MM-dd
      schema:
        type: string

    - in: query
      name: cityIds
      description: Comma separated list of city ids
      example: -10,1
      schema:
        type: string

    - in: query
      name: countryIds
      description: Comma separated list of country ids
      example: 1234,210607
      schema:
        type: string

    - in: query
      name: jobTypes
      description: Comma separated list of jobType ids
      example: 2,4
      schema:
        type: string

    - in: query
      name: LatitudeFrom
      example: 21.2478652577589
      schema:
        type: string
    - in: query
      name: LatitudeTo
      example: 12.27559889056173117
      schema:
        type: string

    - in: query
      name: LongitudeFrom
      example: 114.32084663984377
      schema:
        type: string
    - in: query
      name: LongitudeTo
      example: 105.27559889056173117
      schema:
        type: string

    - in: query
      name: matchTeacherId
      description: Comma separated list of matching teacher ids
      example: 2,4
      schema:
        type: string

    - in: query
      name: matchMemberNumber
      description: Comma separated list of matchMemberNumber ids
      example: 2,4
      schema:
        type: string

    - in: query
      name: minMatchScore
      description: Show minimum match score
      example: 25
      schema:
        type: string

  responses:
    "200":
      description: successful operation
      content:
        application/json:
          schema:
            $ref: "../../../components/schemas/current/jobs/schools-search-school-area-full.yaml"
    "400":
      description: Invalid ID supplied
    "404":
      description: Pet not found
  security:
    - api_key: []

  # Paramters in Java code:

  # RR 2021-10-22: I've added a few notes below to give an idea of the kinds of tweaks which need to be made

  # Note: query name for the following is 'subjects' (from value="subjects")
  # Note: there are several parameters below with similar issues (my fault for not initially pointing this out)
  # @RequestParam(value="subjects",required = false) String[] subjectsStr

  # Note: query name for the following is 'search'; description should be something like 'Part of the job title'
  # , @RequestParam(value="search",required = false) String jobTitleSearchString

  # , @RequestParam(required = false) Integer[] roles
  # , @RequestParam(required = false) Integer[] locations
  # , @RequestParam(value="regions",required = false) Integer[] regions
  # , @RequestParam(value="systems",required = false) Integer[] academicSystems

  # Note: query name for the following is 'start'; example should be something like '2021-10-22'; can include 'format: date'
  # , @RequestParam(value="start",required = false) @DateTimeFormat(pattern = "yyyy-MM-dd") Date startDate

  # , @RequestParam(value="city",required = false) Integer city
  # , @RequestParam(value="country",required = false) Integer country
  # , @RequestParam(value="cities",required = false) Integer[] cityIds
  # , @RequestParam(value="countries",required = false) Integer[] countryIds

  # , @RequestParam(value="lat-from",required = false) Float latitudeFrom
  # , @RequestParam(value="lat-to",required = false) Float latitudeTo
  # , @RequestParam(value="long-from",required = false) Float longitudeFrom
  # , @RequestParam(value="long-to",required = false) Float longitudeTo

  # , @RequestParam(value="job-type",required = false) Integer jobType
  # , @RequestParam(value="job-types",required = false) Integer[] jobTypes
  # , @RequestParam(value="limit",required = false) Integer pagesize
  # , @RequestParam(value="page-number",required=false) Integer pagenumber
  # , @RequestParam(value="maximum-further-info-length",required = false) Integer maxFurtherInfoLength
  # , @RequestParam(value="my-list",required = false) String myListType // my-list=favourites will return only favourites if the user is logged in; otherwise ignored

  # , @RequestParam(value="sort",required=false) String[] sortfield

  # , @RequestParam(value="match-teacher-id",required=false) Integer matchTeacherId
  # , @RequestParam(value="match-member-number",required=false) Integer matchMemberNumber
  # , @RequestParam(value="min-match-score",required=false) Double minMatchScore
