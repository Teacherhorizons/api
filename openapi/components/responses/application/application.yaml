ApplicationResponse:
  oneOf:
    - $ref: "#/ApplicationResponse_admin"
    - $ref: "#/ApplicationResponse_school"
    - $ref: "#/ApplicationResponse_teacher"
  discriminator:
    propertyName: schema
    mapping:
      admin: "#/ApplicationResponse_admin"
      school: "#/ApplicationResponse_school"
      teacher: "#/ApplicationResponse_teacher"

# admin
ApplicationResponse_admin:
  type: object
  additionalProperties: false
  properties:
    schema:
      type: string
      enum:
        - admin
    data:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: "../../../components/models/json-api/application/application.yaml#/JsonApiModel_application_type"
        id:
          $ref: "../../../components/models/json-api/application/application.yaml#/JsonApiModel_application_id"
        attributes:
          type: object
          additionalProperties: false
          properties:
            # simple attributes
            creationDate:
              $ref: "../../../components/models/library/application/application.yaml#/application_creationDate"
            latestUpdateDate:
              $ref: "../../../components/models/library/application/application.yaml#/application_latestUpdateDate"
            recommendationText:
              $ref: "../../../components/models/library/application/application.yaml#/application_recommendationText"
            thSystemMatchScore:
              $ref: "../../../components/models/library/application/application.yaml#/application_thSystemMatchScore"
            hasDataIssues:
              $ref: "../../../components/models/library/application/application.yaml#/application_hasDataIssues"
            # relationship attributes
            thMatchType:
              $ref: "../../../components/models/json-api/application/thMatchType.yaml#/JsonApiModel_application-thMatchType_relationship_attribute"
            status:
              $ref: "../../../components/models/json-api/application/status.yaml#/JsonApiModel_application-status_relationship_attribute"
          required:
            - creationDate
            - latestUpdateDate
            - hasDataIssues
            - status
        relationships:
          type: object
          additionalProperties: false
          properties:
            job:
              $ref: "../../../components/models/json-api/job/job.yaml#/JsonApiModel_job_relationship"
            teacher:
              $ref: "../../../components/models/json-api/teacher/teacher.yaml#/JsonApiModel_teacher_relationship"
            latestEvent:
              $ref: "../../../components/models/json-api/application/ApplicationEvent.yaml#/JsonApiModel_application-applicationEvent_relationship"
          required:
            - job
            - teacher
      required:
        - type
        - id
        - attributes
        - relationships
    included:
      type: array
      items:
        anyOf:
          - $ref: "#/ApplicationResponse_includedSchool_admin"
          - $ref: "#/ApplicationResponse_includedJob_admin"
          - $ref: "#/ApplicationResponse_includedTeacher_admin"
  required:
    - schema
    - data
    - included

ApplicationResponse_includedTeacher_admin:
  type: object
  properties:
    type:
      $ref: "../../../components/models/json-api/teacher/teacher.yaml#/JsonApiModel_teacher_type"
    id:
      $ref: "../../../components/models/json-api/teacher/teacher.yaml#/JsonApiModel_teacher_id"
    attributes:
      type: object
      properties:
        memberNumber:
          $ref: "../../../components/models/library/teacher/teacher.yaml#/teacher_memberNumber"
      required:
        - memberNumber
  required:
    - type
    - id
    - attributes

ApplicationResponse_includedJob_admin:
  type: object
  properties:
    type:
      $ref: "../../../components/models/json-api/job/job.yaml#/JsonApiModel_job_type"
    id:
      $ref: "../../../components/models/json-api/job/job.yaml#/JsonApiModel_job_id"
    attributes:
      type: object
      properties:
        title:
          $ref: "../../../components/models/library/job/job.yaml#/job_title"
        startDate:
          $ref: "../../../components/models/library/job/job.yaml#/job_startDate"
        thOwnerUser:
          $ref: "../../../components/models/library/job/job.yaml#/job_thOwnerUser"
        status:
          $ref: "../../../components/models/library/job/job.yaml#/job_status"
        subject:
          $ref: "../../../components/models/library/job/job.yaml#/job_subject"
        role:
          $ref: "../../../components/models/library/job/job.yaml#/job_role"
      required:
        - title
        - startDate
        - status
        - subject
        - role
    relationships:
      type: object
      properties:
        school:
          $ref: "../../../components/models/json-api/school/school.yaml#/JsonApiModel_school_relationship"
      required:
        - school
  required:
    - type
    - id
    - attributes
    - relationships

ApplicationResponse_includedSchool_admin:
  type: object
  properties:
    type:
      $ref: "../../../components/models/json-api/school/school.yaml#/JsonApiModel_school_type"
    id:
      $ref: "../../../components/models/json-api/school/school.yaml#/JsonApiModel_school_id"
    attributes:
      type: object
      properties:
        name:
          $ref: "../../../components/models/library/school/school.yaml#/school_name"
        thRating:
          $ref: "../../../components/models/library/school/school.yaml#/school_thRating"
        slug:
          $ref: "../../../components/models/library/school/school.yaml#/school_slug"
        city:
          $ref: "../../../components/models/library/school/school.yaml#/school_city"
        lraUser:
          $ref: "../../../components/models/library/school/school.yaml#/school_lraUser"
      required:
        - name
        - slug
        - city
  required:
    - type
    - id
    - attributes

# teacher
ApplicationResponse_teacher:
  type: object
  additionalProperties: false
  properties:
    schema:
      type: string
      enum:
        - teacher
    data:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: "../../../components/models/json-api/application/application.yaml#/JsonApiModel_application_type"
        id:
          $ref: "../../../components/models/json-api/application/application.yaml#/JsonApiModel_application_id"
        attributes:
          type: object
          additionalProperties: false
          properties:
            # simple attributes
            creationDate:
              $ref: "../../../components/models/library/application/application.yaml#/application_creationDate"
            # relationship attributes
            status:
              $ref: "../../../components/models/json-api/application/status.yaml#/JsonApiModel_application-status_relationship_attribute"
            # TODO AS: fix this (half-done by RR - contactStage needs to be defined, currently using status)
            contactStage:
              $ref: "../../../components/models/json-api/application/status.yaml#/JsonApiModel_application-status_relationship_attribute"
          required:
            - creationDate
            - status
            - contactStage
        relationships:
          type: object
          properties:
            job:
              $ref: "../../../components/models/json-api/job/job.yaml#/JsonApiModel_job_relationship"
          required:
            - job
      required:
        - type
        - id
        - attributes
        - relationships
    included:
      type: array
      items:
        anyOf:
          - $ref: "#/ApplicationResponse_includedSchool_teacher"
          - $ref: "#/ApplicationResponse_includedJob_teacher"
          - $ref: "#/ApplicationResponse_includedUser_teacher"
  required:
    - schema
    - data
    - included

ApplicationResponse_includedJob_teacher:
  type: object
  properties:
    type:
      $ref: "../../../components/models/json-api/job/job.yaml#/JsonApiModel_job_type"
    id:
      $ref: "../../../components/models/json-api/job/job.yaml#/JsonApiModel_job_id"
    attributes:
      type: object
      properties:
        title:
          $ref: "../../../components/models/library/job/job.yaml#/job_title"
        startDate:
          $ref: "../../../components/models/library/job/job.yaml#/job_startDate"
        status:
          $ref: "../../../components/models/library/job/job.yaml#/job_status"
        subject:
          $ref: "../../../components/models/library/job/job.yaml#/job_subject"
        role:
          $ref: "../../../components/models/library/job/job.yaml#/job_role"
      required:
        - title
        - startDate
        - status
        - subject
        - role
    relationships:
      type: object
      properties:
        school:
          $ref: "../../../components/models/json-api/school/school.yaml#/JsonApiModel_school_relationship"
        thOwnerUser:
          allOf:
            - $ref: "../../../components/models/json-api/user/user.yaml#/JsonApiModel_user_relationship"
            - $ref: "#/ApplicationResponse_teacher_stage_2_description"
      required:
        - school
  required:
    - type
    - id
    - attributes
    - relationships

ApplicationResponse_includedSchool_teacher:
  type: object
  properties:
    type:
      $ref: "../../../components/models/json-api/school/school.yaml#/JsonApiModel_school_type"
    id:
      $ref: "../../../components/models/json-api/school/school.yaml#/JsonApiModel_school_id"
    attributes:
      type: object
      properties:
        name:
          $ref: "../../../components/models/library/school/school.yaml#/school_name"
        slug:
          $ref: "../../../components/models/library/school/school.yaml#/school_slug"
        city:
          $ref: "../../../components/models/library/school/school.yaml#/school_city"
        smallProfileImageUrl:
          $ref: "../../../components/models/library/school/school.yaml#/school_smallProfileImageUrl"
        leadRecruitmentContactName:
          allOf:
            - $ref: "../../../components/models/library/school/school.yaml#/school_leadRecruitmentContactName"
            - $ref: "#/ApplicationResponse_teacher_stage_3_description"
        leadRecruitmentContactEmail:
          allOf:
            - $ref: "../../../components/models/library/school/school.yaml#/school_leadRecruitmentContactEmail"
            - $ref: "#/ApplicationResponse_teacher_stage_3_description"
      required:
        - name
        - slug
        - city
        - smallProfileImageUrl
    relationships:
      type: object
      properties:
        lraUser:
          allOf:
            - $ref: "../../../components/models/json-api/user/user.yaml#/JsonApiModel_user_relationship"
            - $ref: "#/ApplicationResponse_teacher_stage_2_description"
  required:
    - type
    - id
    - attributes

# descriptions
ApplicationResponse_teacher_stage_2_description:
  description: |
    Included if application contains any of these events:
    - Info request from candidate
    - Interview with adviser - invited
    - Interview with adviser - arranged
    - Interview with adviser
    - Submission to school

ApplicationResponse_teacher_stage_3_description:
  description: |
    Included if application contains any of these events:
    - Interview with School - invited
    - Interview with School - arranged
    - Interview with School

#
ApplicationResponse_includedUser_teacher:
  type: object
  properties:
    type:
      $ref: "../../../components/models/json-api/user/user.yaml#/JsonApiModel_user_type"
    id:
      $ref: "../../../components/models/json-api/user/user.yaml#/JsonApiModel_user_id"
    attributes:
      type: object
      properties:
        firstName:
          $ref: "../../../components/models/library/user/user.yaml#/user_firstName"
        lastName:
          $ref: "../../../components/models/library/user/user.yaml#/user_lastName"
        email:
          $ref: "../../../components/models/library/user/user.yaml#/user_email"
      description: Note that a user is only included if the lraUser or thOwnerUser are included
      required:
        - firstName
        - lastName
        - email

# school
ApplicationResponse_school:
  type: object
  additionalProperties: false
  properties:
    schema:
      type: string
      enum:
        - school
    data:
      type: object
      additionalProperties: false
      properties:
        type:
          $ref: "../../../components/models/json-api/application/application.yaml#/JsonApiModel_application_type"
        id:
          $ref: "../../../components/models/json-api/application/application.yaml#/JsonApiModel_application_id"
        attributes:
          type: object
          additionalProperties: false
          properties:
            # simple attributes
            submissionToSchoolDate:
              $ref: "../../../components/models/library/application/application.yaml#/application_submissionToSchoolDate"
            latestUpdateDate:
              $ref: "../../../components/models/library/application/application.yaml#/application_latestUpdateDate"
            recommendationText:
              $ref: "../../../components/models/library/application/application.yaml#/application_recommendationText"
            # relationship attributes
            status:
              $ref: "../../../components/models/json-api/application/status.yaml#/JsonApiModel_application-status_relationship_attribute"
          required:
            - submissionToSchoolDate
            - latestUpdateDate
            - recommendationText
            - status
        relationships:
          type: object
          properties:
            job:
              $ref: "../../../components/models/json-api/job/job.yaml#/JsonApiModel_job_relationship"
            teacher:
              $ref: "../../../components/models/json-api/teacher/teacher.yaml#/JsonApiModel_teacher_relationship"
          required:
            - job
            - teacher
      required:
        - type
        - id
        - attributes
        - relationships
    included:
      type: array
      items:
        anyOf:
          - $ref: "#/ApplicationResponse_includedSchool_school"
          - $ref: "#/ApplicationResponse_includedJob_school"
          - $ref: "#/ApplicationResponse_includedTeacher_school"
          - $ref: "#/ApplicationResponse_includedUser_school"
  required:
    - schema
    - data
    - included

ApplicationResponse_includedJob_school:
  type: object
  properties:
    type:
      $ref: "../../../components/models/json-api/job/job.yaml#/JsonApiModel_job_type"
    id:
      $ref: "../../../components/models/json-api/job/job.yaml#/JsonApiModel_job_id"
    attributes:
      type: object
      properties:
        title:
          $ref: "../../../components/models/library/job/job.yaml#/job_title"
        startDate:
          $ref: "../../../components/models/library/job/job.yaml#/job_startDate"
        status:
          $ref: "../../../components/models/library/job/job.yaml#/job_status"
      required:
        - title
        - startDate
        - status
    relationships:
      type: object
      properties:
        school:
          $ref: "../../../components/models/json-api/school/school.yaml#/JsonApiModel_school_relationship"
        thOwnerUser:
          allOf:
            - $ref: "../../../components/models/json-api/user/user.yaml#/JsonApiModel_user_relationship"
            - $ref: "#/ApplicationResponse_school_stage_2_description"
      required:
        - school
  required:
    - type
    - id
    - attributes
    - relationships

ApplicationResponse_includedSchool_school:
  type: object
  properties:
    type:
      $ref: "../../../components/models/json-api/school/school.yaml#/JsonApiModel_school_type"
    id:
      $ref: "../../../components/models/json-api/school/school.yaml#/JsonApiModel_school_id"
    attributes:
      type: object
      properties:
        name:
          $ref: "../../../components/models/library/school/school.yaml#/school_name"
        slug:
          $ref: "../../../components/models/library/school/school.yaml#/school_slug"
        city:
          $ref: "../../../components/models/library/school/school.yaml#/school_city"
        # leadRecruitmentContactName:
        #   allOf:
        #     - $ref: "../../../components/models/library/school/school.yaml#/school_leadRecruitmentContactName"
        #     - $ref: "#/ApplicationResponse_school_stage_3_description"
        # leadRecruitmentContactEmail:
        #   allOf:
        #     - $ref: "../../../components/models/library/school/school.yaml#/school_leadRecruitmentContactEmail"
        #     - $ref: "#/ApplicationResponse_school_stage_3_description"
      required:
        - name
        - slug
        - city
    # relationships:
    #   type: object
    #   properties:
    #     lraUser:
    #       allOf:
    #         - $ref: "../../../components/models/json-api/user/user.yaml#/JsonApiModel_user_relationship"
    #         - $ref: "#/ApplicationResponse_school_stage_2_description"
  required:
    - type
    - id
    - attributes

ApplicationResponse_includedTeacher_school:
  type: object
  properties:
    type:
      $ref: "../../../components/models/json-api/teacher/teacher.yaml#/JsonApiModel_teacher_type"
    id:
      $ref: "../../../components/models/json-api/teacher/teacher.yaml#/JsonApiModel_teacher_id"
    attributes:
      type: object
      properties:
        memberNumber:
          $ref: "../../../components/models/library/teacher/teacher.yaml#/teacher_memberNumber"
      required:
        - memberNumber
  required:
    - type
    - id
    - attributes

# descriptions
ApplicationResponse_school_stage_2_description:
  #verify these with Ryan
  description: |
    Included if application contains any of these events:
    - Info request from candidate
    - Interview with adviser - invited
    - Interview with adviser - arranged
    - Interview with adviser
    - Submission to school

ApplicationResponse_school_stage_3_description:
  #verify these with Ryan
  description: |
    Included if application contains any of these events:
    - Interview with School - invited
    - Interview with School - arranged
    - Interview with School

#
ApplicationResponse_includedUser_school:
  type: object
  properties:
    type:
      $ref: "../../../components/models/json-api/user/user.yaml#/JsonApiModel_user_type"
    id:
      $ref: "../../../components/models/json-api/user/user.yaml#/JsonApiModel_user_id"
    attributes:
      type: object
      properties:
        firstName:
          $ref: "../../../components/models/library/user/user.yaml#/user_firstName"
        lastName:
          $ref: "../../../components/models/library/user/user.yaml#/user_lastName"
        email:
          $ref: "../../../components/models/library/user/user.yaml#/user_email"
      description: Note that a user is only included if the lraUser or thOwnerUser are included
      required:
        - firstName
        - lastName
        - email
